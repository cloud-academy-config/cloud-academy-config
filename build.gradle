buildscript {
    ext {
        springBootVersion = '2.6.5'
    }
    repositories {

        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}


subprojects {


    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.palantir.docker'

    sourceCompatibility = 11

    group 'sample'

    bootJar {
        archiveBaseName = 'sample-app'
    }

    // tag::task[]
    task unpack(type: Copy) {
        dependsOn bootJar
        from(zipTree(tasks.bootJar.outputs.files.singleFile))
        into("boot/build/dependency")
    }
    docker {
        name "${project.group}/boot/${bootJar.archiveBaseName}"
        copySpec.from(tasks.unpack.outputs).into("dependency")
        buildArgs(['DEPENDENCY': "dependency"])
    }
// end::task[]


    repositories {
        mavenCentral()
    }
    ext {
        set('springCloudVersion', "2021.0.0")
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {

        implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '3.1.0'
        implementation 'org.springframework.cloud:spring-cloud-starter-config:3.1.0'
        implementation("org.zalando:spring-cloud-config-aws-kms:5.1.2")

        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.0'



        implementation 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        implementation 'org.modelmapper:modelmapper:2.4.5'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        runtimeOnly 'com.h2database:h2:1.3.176'
        implementation 'org.postgresql:postgresql:42.3.1'
        implementation 'org.springframework.boot:spring-boot-starter-jdbc'

        implementation 'org.springframework.boot:spring-boot-starter-security'




    }

    test {
        useJUnitPlatform()
    }
}

project(':boot') {
    dependencies {
        implementation project(':presentation')
        implementation project(':application')
        implementation project(':domain')
        implementation project(':infrastructure')
    }

    test {
        exclude '**/*'
        useJUnitPlatform()
    }
}

project(':presentation') {
    dependencies {
        implementation project(':application')
        implementation project(':domain')
        testImplementation project(':boot')
    }
    bootJar { enabled = false }
}

project(':application') {
    dependencies {
        implementation project(':domain')
    }
    bootJar { enabled = false }
}

project(':domain') {
    dependencies {
        testImplementation project(':boot')
//        implementation project(':infrastructure')
    }
    bootJar { enabled = false }
}

project(':infrastructure') {
    dependencies {
        implementation project(':domain')
        testImplementation project(':boot')
    }
    bootJar { enabled = false }
}
